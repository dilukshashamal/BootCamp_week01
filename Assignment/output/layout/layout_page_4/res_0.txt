{"type": "text", "bbox": [412, 621, 747, 968], "res": [{"text": "Cryptographic algorithms can be classified into two main", "confidence": 0.9921520948410034, "text_region": [[411.0, 622.0], [748.0, 622.0], [748.0, 637.0], [411.0, 637.0]]}, {"text": "categories, symmetric key and asymmetric key (Figure 4)", "confidence": 0.990458071231842, "text_region": [[411.0, 639.0], [748.0, 639.0], [748.0, 654.0], [411.0, 654.0]]}, {"text": "cipher. Symmetric key uses a single key for both encryption.", "confidence": 0.987632155418396, "text_region": [[412.0, 657.0], [748.0, 657.0], [748.0, 669.0], [412.0, 669.0]]}, {"text": "and decryption of the data, whereas asymmetric cipher uses", "confidence": 0.9933165311813354, "text_region": [[411.0, 672.0], [748.0, 672.0], [748.0, 687.0], [411.0, 687.0]]}, {"text": "two different keys to encrypt and to decrypt the data [46].", "confidence": 0.9971471428871155, "text_region": [[410.0, 687.0], [747.0, 688.0], [747.0, 704.0], [410.0, 703.0]]}, {"text": "Symmetric key cryptography is safe and comparatively fast,", "confidence": 0.9950588345527649, "text_region": [[411.0, 705.0], [748.0, 705.0], [748.0, 720.0], [411.0, 720.0]]}, {"text": "the only downside of symmetric key encryption is the sharing", "confidence": 0.9935601949691772, "text_region": [[412.0, 722.0], [748.0, 722.0], [748.0, 737.0], [412.0, 737.0]]}, {"text": "of key between the communicating parties without compro-", "confidence": 0.9855555295944214, "text_region": [[411.0, 739.0], [747.0, 739.0], [747.0, 754.0], [411.0, 754.0]]}, {"text": "mising it [32]. But this could be overcome by pre-sharing", "confidence": 0.9853000044822693, "text_region": [[410.0, 754.0], [748.0, 755.0], [748.0, 771.0], [410.0, 770.0]]}, {"text": "the key through a trusted third party. Also, it ensures con-", "confidence": 0.9822988510131836, "text_region": [[411.0, 771.0], [747.0, 771.0], [747.0, 785.0], [411.0, 785.0]]}, {"text": "fidentiality, data integrity and authentication (using authenti-", "confidence": 0.9985038042068481, "text_region": [[411.0, 788.0], [747.0, 788.0], [747.0, 802.0], [411.0, 802.0]]}, {"text": "cation encryption mode (AEAD)) of the data. Asymmetric", "confidence": 0.9879494309425354, "text_region": [[411.0, 805.0], [749.0, 805.0], [749.0, 819.0], [411.0, 819.0]]}, {"text": "cryptography uses two private-public key pairs. It ensures", "confidence": 0.9946798086166382, "text_region": [[411.0, 822.0], [749.0, 822.0], [749.0, 836.0], [411.0, 836.0]]}, {"text": "confidentiality and integrity by making use of the public key", "confidence": 0.9893183708190918, "text_region": [[411.0, 839.0], [748.0, 839.0], [748.0, 853.0], [411.0, 853.0]]}, {"text": "of the receiver and further ensures authentication by using", "confidence": 0.9996260404586792, "text_region": [[411.0, 855.0], [748.0, 855.0], [748.0, 869.0], [411.0, 869.0]]}, {"text": "the sender's private key (as a digital signature) to encrypt", "confidence": 0.9852664470672607, "text_region": [[410.0, 872.0], [747.0, 872.0], [747.0, 886.0], [410.0, 886.0]]}, {"text": "the data. At the other end, the receiver decrypts it by using", "confidence": 0.9932895302772522, "text_region": [[410.0, 886.0], [748.0, 887.0], [748.0, 903.0], [410.0, 902.0]]}, {"text": "the sender's public key first and then using his/her private", "confidence": 0.9674980044364929, "text_region": [[410.0, 904.0], [747.0, 904.0], [747.0, 919.0], [410.0, 919.0]]}, {"text": "key [46]. The only disadvantage of asymmetric encryption is", "confidence": 0.9857288002967834, "text_region": [[411.0, 921.0], [749.0, 921.0], [749.0, 936.0], [411.0, 936.0]]}, {"text": "its large key which increases the complexity and slows down", "confidence": 0.9925470352172852, "text_region": [[411.0, 937.0], [749.0, 937.0], [749.0, 952.0], [411.0, 952.0]]}, {"text": "the process [32].", "confidence": 0.9738187193870544, "text_region": [[411.0, 954.0], [505.0, 954.0], [505.0, 969.0], [411.0, 969.0]]}], "img_idx": 0, "score": 0.9953332543373108}
{"type": "text", "bbox": [50, 90, 385, 270], "res": [{"text": "physical space occupied, memory demand and energy con-", "confidence": 0.9981963038444519, "text_region": [[49.0, 90.0], [384.0, 88.0], [384.0, 104.0], [49.0, 105.0]]}, {"text": "sumption as a cost to implement, processing power in terms", "confidence": 0.999596893787384, "text_region": [[49.0, 108.0], [386.0, 108.0], [386.0, 122.0], [49.0, 122.0]]}, {"text": "of latency and through as performance (speed) and block/key", "confidence": 0.9830119013786316, "text_region": [[50.0, 124.0], [384.0, 124.0], [384.0, 138.0], [50.0, 138.0]]}, {"text": "length and different attack models including side-channel", "confidence": 0.9995121359825134, "text_region": [[50.0, 141.0], [386.0, 141.0], [386.0, 155.0], [50.0, 155.0]]}, {"text": "& fault-injection attacks as a security measure. First two", "confidence": 0.9842180013656616, "text_region": [[50.0, 158.0], [386.0, 158.0], [386.0, 172.0], [50.0, 172.0]]}, {"text": "characteristics are satisfied by LWC algorithms by offering", "confidence": 0.9788273572921753, "text_region": [[50.0, 173.0], [386.0, 173.0], [386.0, 188.0], [50.0, 188.0]]}, {"text": "simple round functions on the tiny block ( 64bit) using a", "confidence": 0.9934816956520081, "text_region": [[50.0, 190.0], [388.0, 190.0], [388.0, 205.0], [50.0, 205.0]]}, {"text": "tiny key ( 8Obit) with simple key scheduling. The last but", "confidence": 0.9735838770866394, "text_region": [[49.0, 207.0], [388.0, 207.0], [388.0, 222.0], [49.0, 222.0]]}, {"text": "important characteristic, security, is fulfilled by the adoption", "confidence": 0.9957265853881836, "text_region": [[50.0, 223.0], [386.0, 223.0], [386.0, 238.0], [50.0, 238.0]]}, {"text": "of one of the six internal structures (SPN, FN, GFN, ARX", "confidence": 0.998766303062439, "text_region": [[50.0, 240.0], [384.0, 240.0], [384.0, 255.0], [50.0, 255.0]]}, {"text": "NLFSR, Hybrid) to immune against the security attacks.", "confidence": 0.9982808232307434, "text_region": [[48.0, 255.0], [363.0, 257.0], [362.0, 272.0], [48.0, 270.0]]}], "img_idx": 0, "score": 0.9908105134963989}
{"type": "text", "bbox": [50, 748, 385, 828], "res": [{"text": "Throughput, in hardware, can be measured in terms of plain", "confidence": 0.9918531179428101, "text_region": [[50.0, 748.0], [386.0, 748.0], [386.0, 763.0], [50.0, 763.0]]}, {"text": "text processed per time unit (bits per second) at 1O0 KHz", "confidence": 0.9521088600158691, "text_region": [[51.0, 766.0], [385.0, 766.0], [385.0, 777.0], [51.0, 777.0]]}, {"text": "frequency, whereas in software, it is the average amount", "confidence": 0.9830399751663208, "text_region": [[50.0, 781.0], [386.0, 781.0], [386.0, 796.0], [50.0, 796.0]]}, {"text": "of plaintext processed per CPU clock cycle at 4 MHz", "confidence": 0.9646455645561218, "text_region": [[49.0, 797.0], [386.0, 797.0], [386.0, 811.0], [49.0, 811.0]]}, {"text": "frequency [45].", "confidence": 0.9893346428871155, "text_region": [[50.0, 815.0], [135.0, 815.0], [135.0, 827.0], [50.0, 827.0]]}], "img_idx": 0, "score": 0.9843378663063049}
{"type": "text", "bbox": [50, 513, 385, 610], "res": [{"text": "It is the physical area required to implement/run the algorithm", "confidence": 0.9945407509803772, "text_region": [[49.0, 513.0], [386.0, 513.0], [386.0, 528.0], [49.0, 528.0]]}, {"text": "on a board/circuit, measured in m. This space can be spec", "confidence": 0.9977218508720398, "text_region": [[50.0, 530.0], [384.0, 530.0], [384.0, 545.0], [50.0, 545.0]]}, {"text": "ified using logical blocks for FPGA or using GE for ASIC", "confidence": 0.9897226095199585, "text_region": [[50.0, 546.0], [386.0, 546.0], [386.0, 561.0], [50.0, 561.0]]}, {"text": "(1GE = 2 input-NAND Gate) [6]. Normally, 200 to 2000 GE", "confidence": 0.9913439154624939, "text_region": [[50.0, 563.0], [386.0, 563.0], [386.0, 578.0], [50.0, 578.0]]}, {"text": "(out of 1000 to 10,000 GE of total available) are allocated for", "confidence": 0.9957668781280518, "text_region": [[50.0, 579.0], [386.0, 579.0], [386.0, 594.0], [50.0, 594.0]]}, {"text": "security reasons in an economical RFID tag [44].", "confidence": 0.9889349341392517, "text_region": [[49.0, 596.0], [322.0, 596.0], [322.0, 611.0], [49.0, 611.0]]}], "img_idx": 0, "score": 0.9810590147972107}
{"type": "text", "bbox": [50, 646, 385, 711], "res": [{"text": "It is the time to produce the cipher from the original text", "confidence": 0.9953517317771912, "text_region": [[48.0, 647.0], [386.0, 647.0], [386.0, 662.0], [48.0, 662.0]]}, {"text": "in terms of hardware performance [6] whereas the amount", "confidence": 0.9984301328659058, "text_region": [[49.0, 663.0], [386.0, 663.0], [386.0, 678.0], [49.0, 678.0]]}, {"text": "of clock cycles per block (during encryption) defines the", "confidence": 0.9995331764221191, "text_region": [[50.0, 680.0], [386.0, 680.0], [386.0, 696.0], [50.0, 696.0]]}, {"text": "software latency.", "confidence": 0.9995023012161255, "text_region": [[48.0, 696.0], [144.0, 697.0], [144.0, 713.0], [48.0, 712.0]]}], "img_idx": 0, "score": 0.9807708859443665}
{"type": "text", "bbox": [412, 970, 747, 1018], "res": [{"text": "In block cipher, both encryption and decryption take place", "confidence": 0.993368923664093, "text_region": [[425.0, 970.0], [749.0, 970.0], [749.0, 985.0], [425.0, 985.0]]}, {"text": "on a fixed size block (64 bits or more) at a time whereas", "confidence": 0.9924416542053223, "text_region": [[411.0, 987.0], [749.0, 987.0], [749.0, 1002.0], [411.0, 1002.0]]}, {"text": "stream cipher continuously processes the input elements bit", "confidence": 0.9968973398208618, "text_region": [[411.0, 1004.0], [750.0, 1004.0], [750.0, 1019.0], [411.0, 1019.0]]}], "img_idx": 0, "score": 0.9793437719345093}
{"type": "text", "bbox": [50, 302, 385, 384], "res": [{"text": "Based on first two characteristics (physical and performance)", "confidence": 0.9954220652580261, "text_region": [[50.0, 305.0], [385.0, 305.0], [385.0, 316.0], [50.0, 316.0]]}, {"text": "offered by any LWC algorithms, hardware and software spe-", "confidence": 0.9911440014839172, "text_region": [[49.0, 318.0], [384.0, 320.0], [384.0, 335.0], [49.0, 334.0]]}, {"text": "cific resource requirement could be measured in terms of", "confidence": 0.9965391159057617, "text_region": [[50.0, 337.0], [388.0, 337.0], [388.0, 351.0], [50.0, 351.0]]}, {"text": "memory requirements, gate area, latency, throughput, and", "confidence": 0.9974657893180847, "text_region": [[50.0, 354.0], [388.0, 354.0], [388.0, 368.0], [50.0, 368.0]]}, {"text": "power and energy consumption as follows:", "confidence": 0.9778199195861816, "text_region": [[49.0, 371.0], [289.0, 371.0], [289.0, 385.0], [49.0, 385.0]]}], "img_idx": 0, "score": 0.9772694706916809}
{"type": "text", "bbox": [50, 415, 385, 481], "res": [{"text": "Generally, measured in KB [40]. RAM is required to store", "confidence": 0.9841991662979126, "text_region": [[50.0, 416.0], [386.0, 416.0], [386.0, 431.0], [50.0, 431.0]]}, {"text": "intermediate values that can be used in computations and", "confidence": 0.9913864731788635, "text_region": [[50.0, 433.0], [388.0, 433.0], [388.0, 448.0], [50.0, 448.0]]}, {"text": "ROM is required to store the program/algorithm, and static", "confidence": 0.993560791015625, "text_region": [[50.0, 450.0], [386.0, 450.0], [386.0, 465.0], [50.0, 465.0]]}, {"text": "data, such as algorithm key, S-box (in some cases), etc., [6]", "confidence": 0.9925808906555176, "text_region": [[49.0, 467.0], [380.0, 467.0], [380.0, 482.0], [49.0, 482.0]]}], "img_idx": 0, "score": 0.970855176448822}
{"type": "text", "bbox": [50, 864, 385, 895], "res": [{"text": "The amount of power required by the circuit to process the", "confidence": 0.9947563409805298, "text_region": [[49.0, 865.0], [386.0, 865.0], [386.0, 879.0], [49.0, 879.0]]}, {"text": "algorithm can be measured in  W.", "confidence": 0.9854981303215027, "text_region": [[50.0, 883.0], [241.0, 883.0], [241.0, 894.0], [50.0, 894.0]]}], "img_idx": 0, "score": 0.9461140036582947}
{"type": "text", "bbox": [413, 398, 746, 430], "res": [{"text": "Gives performance over resource requirements. For hard", "confidence": 0.9960237145423889, "text_region": [[410.0, 398.0], [745.0, 398.0], [745.0, 413.0], [410.0, 413.0]]}, {"text": "ware, it can be calculated as follows [40]:", "confidence": 0.9953775405883789, "text_region": [[411.0, 416.0], [643.0, 416.0], [643.0, 431.0], [411.0, 431.0]]}], "img_idx": 0, "score": 0.9398963451385498}
{"type": "text", "bbox": [53, 1003, 343, 1018], "res": [{"text": "Here, latency is in terms of software implementation.", "confidence": 0.9847907423973083, "text_region": [[49.0, 1004.0], [344.0, 1004.0], [344.0, 1019.0], [49.0, 1019.0]]}], "img_idx": 0, "score": 0.8971768617630005}
{"type": "text", "bbox": [413, 570, 616, 585], "res": [{"text": "Here, code size is the algorithm size.", "confidence": 0.9830480813980103, "text_region": [[412.0, 571.0], [616.0, 571.0], [616.0, 586.0], [412.0, 586.0]]}], "img_idx": 0, "score": 0.89032381772995}
{"type": "text", "bbox": [432, 503, 725, 535], "res": [{"text": "Similarly, software efficiency can be determined as fol-", "confidence": 0.9980675578117371, "text_region": [[425.0, 504.0], [747.0, 504.0], [747.0, 519.0], [425.0, 519.0]]}, {"text": "lows [40]:", "confidence": 0.9915581941604614, "text_region": [[410.0, 518.0], [471.0, 520.0], [470.0, 536.0], [409.0, 534.0]]}], "img_idx": 0, "score": 0.825872540473938}
{"type": "text", "bbox": [412, 486, 633, 501], "res": [{"text": "Here, complexity means physical space.", "confidence": 0.9999581575393677, "text_region": [[411.0, 487.0], [635.0, 487.0], [635.0, 502.0], [411.0, 502.0]]}], "img_idx": 0, "score": 0.7735350728034973}
{"type": "text", "bbox": [432, 545, 725, 560], "res": [{"text": "Software Efficiency = Throughput[Kbps]/CodeSize[KB]", "confidence": 0.989757776260376, "text_region": [[418.0, 546.0], [733.0, 546.0], [733.0, 561.0], [418.0, 561.0]]}], "img_idx": 0, "score": 0.7102402448654175}
{"type": "text", "bbox": [447, 338, 594, 351], "res": [{"text": "FIGURE 4.Structure wise Classification of LWC.", "confidence": 0.9587613940238953, "text_region": [[412.0, 339.0], [627.0, 339.0], [627.0, 350.0], [412.0, 350.0]]}], "img_idx": 0, "score": 0.602691650390625}
{"type": "title", "bbox": [50, 397, 212, 413], "res": [{"text": "1) MEMORY REQUIREMENTS", "confidence": 0.9828231930732727, "text_region": [[50.0, 398.0], [215.0, 398.0], [215.0, 413.0], [50.0, 413.0]]}], "img_idx": 0, "score": 0.9246623516082764}
{"type": "title", "bbox": [50, 846, 202, 862], "res": [{"text": "5)POWER REQUIREMENTS", "confidence": 0.9952686429023743, "text_region": [[49.0, 847.0], [205.0, 847.0], [205.0, 861.0], [49.0, 861.0]]}], "img_idx": 0, "score": 0.9148704409599304}
{"type": "title", "bbox": [50, 730, 148, 744], "res": [{"text": "4) THROUGHPUT", "confidence": 0.9595332741737366, "text_region": [[49.0, 730.0], [151.0, 730.0], [151.0, 745.0], [49.0, 745.0]]}], "img_idx": 0, "score": 0.9091793298721313}
{"type": "title", "bbox": [50, 628, 118, 644], "res": [{"text": "3) LATENCY", "confidence": 0.9903357625007629, "text_region": [[49.0, 628.0], [120.0, 628.0], [120.0, 644.0], [49.0, 644.0]]}], "img_idx": 0, "score": 0.9081977605819702}
{"type": "title", "bbox": [50, 494, 131, 510], "res": [{"text": "2)GATE AREA", "confidence": 0.925712525844574, "text_region": [[50.0, 496.0], [132.0, 496.0], [132.0, 509.0], [50.0, 509.0]]}], "img_idx": 0, "score": 0.8912523984909058}
{"type": "title", "bbox": [413, 380, 494, 395], "res": [{"text": "7)EFFICIENCY", "confidence": 0.9839738011360168, "text_region": [[412.0, 382.0], [494.0, 382.0], [494.0, 394.0], [412.0, 394.0]]}], "img_idx": 0, "score": 0.859965443611145}
{"type": "title", "bbox": [74, 284, 367, 299], "res": [{"text": "B. HARDWARE AND SOFTWARE PERFORMANCE METRICS", "confidence": 0.9663982391357422, "text_region": [[50.0, 284.0], [385.0, 284.0], [385.0, 299.0], [50.0, 299.0]]}], "img_idx": 0, "score": 0.8011548519134521}
{"type": "title", "bbox": [414, 440, 529, 455], "res": [{"text": "Hardware Efficiency", "confidence": 0.9984748363494873, "text_region": [[414.0, 440.0], [531.0, 441.0], [531.0, 457.0], [414.0, 456.0]]}], "img_idx": 0, "score": 0.6402000188827515}
{"type": "list", "bbox": [51, 932, 385, 946], "res": [{"text": "Energy consumption per bit can be calculated as follows [40]:", "confidence": 0.9819568991661072, "text_region": [[49.0, 932.0], [385.0, 930.0], [385.0, 946.0], [49.0, 947.0]]}], "img_idx": 0, "score": 0.6590619087219238}
{"type": "figure", "bbox": [422, 86, 740, 327], "res": [{"text": "SPN", "confidence": 0.9955222010612488, "text_region": [[711.0, 96.0], [730.0, 96.0], [730.0, 105.0], [711.0, 105.0]]}, {"text": "GFN", "confidence": 0.9611921906471252, "text_region": [[712.0, 178.0], [729.0, 181.0], [727.0, 192.0], [710.0, 189.0]]}, {"text": "(Public Key)", "confidence": 0.9930484294891357, "text_region": [[520.0, 209.0], [560.0, 209.0], [560.0, 216.0], [520.0, 216.0]]}, {"text": "ARX", "confidence": 0.9933395385742188, "text_region": [[706.0, 223.0], [730.0, 223.0], [730.0, 236.0], [706.0, 236.0]]}, {"text": "NLFSR", "confidence": 0.7580779790878296, "text_region": [[695.0, 263.0], [739.0, 263.0], [739.0, 280.0], [695.0, 280.0]]}, {"text": "Hybrid", "confidence": 0.9946731925010681, "text_region": [[701.0, 306.0], [738.0, 306.0], [738.0, 322.0], [701.0, 322.0]]}], "img_idx": 0, "score": 0.9599735140800476}
